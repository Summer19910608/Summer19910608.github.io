(window.webpackJsonp=window.webpackJsonp||[]).push([[14],{574:function(s,a,t){"use strict";t.r(a);var e=t(68),n=Object(e.a)({},(function(){var s=this,a=s.$createElement,t=s._self._c||a;return t("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[t("h3",{attrs:{id:"安装git后"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#安装git后"}},[s._v("#")]),s._v(" 安装git后")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v('$ git config --global user.name "Your Name"\n$ git config --global user.email "email@example.com"\n')])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br")])]),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v('$ ssh-keygen -t rsa -C "youremail@example.com"\n')])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("p",[s._v("创建ssh key，用于和github通信\n(秘钥存储于C:\\Users\\27634.ssh，把公钥id_rsa.pub存储于github)")]),s._v(" "),t("h3",{attrs:{id:"创建版本库"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#创建版本库"}},[s._v("#")]),s._v(" 创建版本库")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("$ pwd 命令用于显示当前目录(没啥用)\n$ git init 把这个目录变成Git可以管理的仓库(后续新建提交和ssh克隆需要)\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br")])]),t("h3",{attrs:{id:"操作版本库"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#操作版本库"}},[s._v("#")]),s._v(" 操作版本库")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v('$ git add 文件名 添加文件(新增或者更改都需要先add)\n$ git commit -m "说明" 提交到本地版本库\n')])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br")])]),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("$ git status 查看仓库状态\n$ git diff 文件名 查看修改的地方\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br")])]),t("h3",{attrs:{id:"版本回退-从一个commit恢复"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#版本回退-从一个commit恢复"}},[s._v("#")]),s._v(" 版本回退(从一个commit恢复)")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("$ git log 查看版本历史\n$ git reset --hard HEAD^ 回退到上个版本\n$ git reset --hard 1094a 回退到特定版本号(commit以后回退)\n$ git reflog 记录每一次命令\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br")])]),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("$ git checkout -- file 直接丢弃工作区的修改(add以前回退)\n$ git reset HEAD <file> 添加到了暂存区时，想丢弃修改(add以后回退)\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br")])]),t("h3",{attrs:{id:"删除文件"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#删除文件"}},[s._v("#")]),s._v(" 删除文件")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("$ git rm file(已经add/commit,在目录中删除)\n\n$ git checkout -- file 删错了回退\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br")])]),t("h3",{attrs:{id:"远程仓库"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#远程仓库"}},[s._v("#")]),s._v(" 远程仓库")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("$ git remote add origin git@server-name:path/repo-name.git 关联远程库\n$ git push -u origin master 第一次的push\n$ git push origin master 常用的push，本地分支会在服务器上新建分支\n$ git pull 需要有关联的分支，第一次下拉最好新建一个空文件夹\n$ git branch --set-upstream-to=origin/远程分支 本地分支 关联分支\n\n$ git clone git@server-name:path/repo-name.git 克隆(不需要另建文件夹)\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br")])]),t("h3",{attrs:{id:"分支"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#分支"}},[s._v("#")]),s._v(" 分支")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v('**$ git branch -a 查看所有分支\n$ git branch -vv 查看分支关联\n$ git branch dev 创建分支\n$ git checkout dev 切换分支\n$ git merge dev 合并某分支到当前分支\n$ git merge --no-ff -m "msg" dev 普通模式合并，合并后的历史有分支\n$ git branch -d dev 删除分支\n$ git checkout -b dev 创建并切换分支**\n')])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br")])]),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("合并分支,无法merge\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("$ git stash save 名字 暂存工作状态\n$ git pull origin dev 拉下来 \n$ git stash list 查看已经暂存的状态\n$ git stash pop stash@{0} 将暂存状态merge到当前分支\n还有冲突时,手动修改文件,然后add/commit\n$ git log --graph 分支合并图\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br")])]),t("h3",{attrs:{id:"bug分支issue"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#bug分支issue"}},[s._v("#")]),s._v(" bug分支issue")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("$ git stash 暂存工作状态\n$ git stash list 查看暂存工作状态\n$ git stash pop 恢复暂存状态并删除状态\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br")])]),t("h3",{attrs:{id:"开发分支feature"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#开发分支feature"}},[s._v("#")]),s._v(" 开发分支feature")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("$ git branch -D <name> 强制删除未合并的分支\n\nrebase\n$ git rebase 本地未push的分叉提交历史整理成直线\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br")])]),t("h3",{attrs:{id:"标签"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#标签"}},[s._v("#")]),s._v(" 标签")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v('$ git tag 标签名 打在最新提交的commit上\n$ git tag 查询所有标签\n$ git tag 标签名 f52c633 给特定的commit打标签\n$ git tag -a 标签名 -m "msg" commit的id 给标签设置说明\n$ git show 标签名 查询标签内容\n$ git tag -d 标签名 删除标签\n$ git push origin 标签名 推送某个标签到远程\n$ git push origin --tags 推送所有标签\n$ git push origin :refs/tags/<tagname> 可以删除一个远程标签。\n')])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br")])])])}),[],!1,null,null,null);a.default=n.exports}}]);